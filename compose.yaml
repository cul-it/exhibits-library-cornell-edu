# Docker compose file for development environment
# Run with: docker compose up

services:
  webapp:
    build:
      context: .
      target: development
    image: exhibits
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      - PORT=9292
    volumes:
      - .:/exhibits
      # - gems:/usr/local/bundle
    networks:
      - proxy_network
    ports:
      - 9292:9292
    depends_on:
      - mysql
      - redis
      - solr

  mysql:
    extends:
      file: compose.base.yaml
      service: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_RAILS_ROOT_PW}
      - MYSQL_USER=${DATABASE_RAILS_USER}
      - MYSQL_PASSWORD=${DATABASE_RAILS_USER_PW}
      - MYSQL_DATABASE=${DATABASE_NAME_PREFIX}_development
    networks:
      - proxy_network
    ports:
      - 3306:3306
    volumes:
      - db-data:/var/lib/mysql

  solr:
    extends:
      file: compose.base.yaml
      service: solr
    networks:
      - proxy_network
    ports:
      - 8983:8983
    volumes:
      - solr_home:/opt/solr/server/solr
      - ./solr/conf:/opt/solr/server/configsets/exhibitsconf

  redis:
    extends:
      file: compose.base.yaml
      service: redis
    networks:
      - proxy_network
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  nginx:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./docker/web/templates:/etc/nginx/templates
      - .:/exhibits
    networks:
      - proxy_network
    depends_on:
      - webapp
    restart: always

networks:
  proxy_network:

volumes:
  db-data:
  # Uncomment gems volume if installing gems locally and you want to persist gems across builds
  # gems:
  redis:
  solr_home:
